Terminals unused in grammar

   KEYWORD_
   STRUCT_
   TYPEDEF_
   UNION_
   HASH_
   PUNCTUATOR_


Grammar

    0 $accept: translation_unit $end

    1 constant: FLOAT_CONSTANT_
    2         | CHARACTER_CONSTANT_
    3         | ENUMERATION_CONSTANT_
    4         | INTEGER_CONSTANT_
    5         | FRACTIONAL_CONSTANT_

    6 primary_expression: IDENTIFIER_
    7                   | constant
    8                   | STRING_LITERAL_
    9                   | PAREN_OPEN_ expression PAREN_CLOSE_

   10 postfix_expression: primary_expression
   11                   | postfix_expression SQRBRK_OPEN_ expression SQRBRK_CLOSE_
   12                   | postfix_expression PAREN_OPEN_ argument_expression_list_opt PAREN_CLOSE_
   13                   | postfix_expression DOT_ IDENTIFIER_
   14                   | postfix_expression ARROW_ IDENTIFIER_
   15                   | postfix_expression INCR_
   16                   | postfix_expression DECR_
   17                   | PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_

   19 argument_expression_list_opt: argument_expression_list
   20                             | %empty

   21 argument_expression_list: assignment_expression
   22                         | argument_expression_list COMMA_ assignment_expression

   23 unary_expression: postfix_expression
   24                 | INCR_ unary_expression
   25                 | DECR_ unary_expression
   26                 | unary_operator cast_expression
   27                 | SIZEOF_ unary_expression
   28                 | SIZEOF_ PAREN_OPEN_ type_name PAREN_CLOSE_

   29 unary_operator: AND_
   30               | STAR_
   31               | PLUS_
   32               | MINUS_
   33               | TILDA_
   34               | NOT_

   35 cast_expression: unary_expression
   36                | PAREN_OPEN_ type_name PAREN_CLOSE_ cast_expression

   37 multiplicative_expression: cast_expression
   38                          | multiplicative_expression STAR_ cast_expression
   39                          | multiplicative_expression SLASH_ cast_expression
   40                          | multiplicative_expression PERCENT_ cast_expression

   41 additive_expression: multiplicative_expression
   42                    | additive_expression PLUS_ multiplicative_expression
   43                    | additive_expression MINUS_ multiplicative_expression

   44 shift_expression: additive_expression
   45                 | shift_expression LSHFT_ additive_expression
   46                 | shift_expression RSHFT_ additive_expression

   47 relational_expression: shift_expression
   48                      | relational_expression LESS_ shift_expression
   49                      | relational_expression GRTH_ shift_expression
   50                      | relational_expression LESSE_ shift_expression
   51                      | relational_expression GRTHE_ shift_expression

   52 equality_expression: relational_expression
   53                    | equality_expression EQUALS_ relational_expression
   54                    | equality_expression NOTEQ_ relational_expression

   55 AND_expression: equality_expression
   56               | AND_expression AND_ equality_expression

   57 exclusive_OR_expression: AND_expression
   58                        | exclusive_OR_expression XOR_ AND_expression

   59 inclusive_OR_expression: exclusive_OR_expression
   60                        | inclusive_OR_expression OR_ exclusive_OR_expression

   61 logical_AND_expression: inclusive_OR_expression
   62                       | logical_AND_expression ANDAND_ inclusive_OR_expression

   63 logical_OR_expression: logical_AND_expression
   64                      | logical_OR_expression OROR_ logical_AND_expression

   65 conditional_expression: logical_OR_expression
   66                       | logical_OR_expression QUES_ expression COLON_ conditional_expression

   67 assignment_expression: conditional_expression
   68                      | unary_expression assignment_operator assignment_expression

   69 assignment_operator: ASSGN_
   70                    | ASSGNMUL_
   71                    | ASSGNDIV_
   72                    | ASSGNPERCENT_
   73                    | ASSGNPLUS_
   74                    | ASSGNMINUS_
   75                    | ASSGNLSHT_
   76                    | ASSGNRSHT_
   77                    | ASSGNAND_
   78                    | ASSGNOR_
   79                    | ASSGNXOR_

   80 expression: assignment_expression
   81           | expression COMMA_ assignment_expression

   82 constant_expression: conditional_expression

   83 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON_

   84 init_declarator_list_opt: init_declarator_list
   85                         | %empty

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   87                       | type_specifier declaration_specifiers_opt
   88                       | type_qualifier declaration_specifiers_opt
   89                       | function_specifier declaration_specifiers_opt

   90 declaration_specifiers_opt: declaration_specifiers
   91                           | %empty

   92 init_declarator_list: init_declarator
   93                     | init_declarator_list COMMA_ init_declarator

   94 init_declarator: declarator
   95                | declarator ASSGN_ initializer

   96 identifier_list_opt: identifier_list
   97                    | %empty

   98 storage_class_specifier: EXTERN_
   99                        | STATIC_
  100                        | AUTO_
  101                        | REGISTER_

  102 type_specifier: VOID_
  103               | CHAR_
  104               | SHORT_
  105               | INT_
  106               | LONG_
  107               | FLOAT_
  108               | DOUBLE_
  109               | SIGNED_
  110               | UNSIGNED_
  111               | BOOL_
  112               | COMPLEX_
  113               | IMAGINARY_
  114               | enum_specifier

  115 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  116                         | type_qualifier specifier_qualifier_list_opt

  117 specifier_qualifier_list_opt: specifier_qualifier_list
  118                             | %empty

  119 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list CURBRK_CLOSE_
  120               | ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list COMMA_ CURBRK_CLOSE_
  121               | ENUM_ IDENTIFIER_

  122 identifier_opt: IDENTIFIER_
  123               | %empty

  124 enumerator_list: enumerator
  125                | enumerator_list COMMA_ enumerator

  126 enumerator: ENUMERATION_CONSTANT_
  127           | ENUMERATION_CONSTANT_ ASSGN_ constant_expression

  128 type_qualifier: CONST_
  129               | RESTRICT_
  130               | VOLATILE_

  131 function_specifier: INLINE_

  132 declarator: pointer_opt direct_declarator

  133 pointer_opt: pointer
  134            | %empty

  135 direct_declarator: IDENTIFIER_
  136                  | PAREN_OPEN_ declarator PAREN_CLOSE_
  137                  | direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt assignment_expression_opt SQRBRK_CLOSE_
  138                  | direct_declarator SQRBRK_OPEN_ STATIC_ type_qualifier_list_opt assignment_expression SQRBRK_CLOSE_
  139                  | direct_declarator SQRBRK_OPEN_ type_qualifier_list STATIC_ assignment_expression SQRBRK_CLOSE_
  140                  | direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt STAR_ SQRBRK_CLOSE_
  141                  | direct_declarator PAREN_OPEN_ parameter_type_list PAREN_CLOSE_
  142                  | direct_declarator PAREN_OPEN_ identifier_list_opt PAREN_CLOSE_

  143 pointer: STAR_ type_qualifier_list_opt
  144        | STAR_ type_qualifier_list_opt pointer

  145 type_qualifier_list_opt: type_qualifier_list
  146                        | %empty

  147 assignment_expression_opt: assignment_expression
  148                          | %empty

  149 type_qualifier_list: type_qualifier
  150                    | type_qualifier_list type_qualifier

  151 parameter_type_list: parameter_list
  152                    | parameter_list COMMA_ TRPDOTS_

  153 parameter_list: parameter_declaration
  154               | parameter_list COMMA_ parameter_declaration

  155 parameter_declaration: declaration_specifiers declarator
  156                      | declaration_specifiers

  157 identifier_list: IDENTIFIER_
  158                | identifier_list COMMA_ IDENTIFIER_

  159 type_name: specifier_qualifier_list

  160 initializer: assignment_expression
  161            | CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
  162            | CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_

  163 initializer_list: designation_opt initializer
  164                 | initializer_list COMMA_ designation_opt initializer

  165 designation_opt: designation
  166                | %empty

  167 designation: designator_list ASSGN_

  168 designator_list: designator
  169                | designator_list designator

  170 designator: SQRBRK_OPEN_ constant_expression SQRBRK_CLOSE_
  171           | DOT_ IDENTIFIER_

  172 statement: labeled_statement
  173          | compound_statement
  174          | expression_statement
  175          | selection_statement
  176          | iteration_statement
  177          | jump_statement

  178 labeled_statement: IDENTIFIER_ COLON_ statement
  179                  | CASE_ constant_expression COLON_ statement
  180                  | DEFAULT_ COLON_ statement

  181 compound_statement: CURBRK_OPEN_ block_item_list_opt CURBRK_CLOSE_

  182 block_item_list_opt: block_item_list
  183                    | %empty

  184 block_item_list: block_item
  185                | block_item_list block_item

  186 block_item: declaration
  187           | statement

  188 expression_statement: expression_opt SEMICOLON_

  189 expression_opt: expression
  190               | %empty

  191 selection_statement: IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement
  192                    | IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement ELSE_ statement
  193                    | SWITCH_ PAREN_OPEN_ expression PAREN_CLOSE_ statement

  194 iteration_statement: WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ statement
  195                    | DO_ statement WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ SEMICOLON_
  196                    | FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement
  197                    | FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

  198 jump_statement: GOTO_ IDENTIFIER_ SEMICOLON_
  199               | CONTINUE_ SEMICOLON_
  200               | BREAK_ SEMICOLON_
  201               | RETURN_ expression_opt SEMICOLON_

  202 translation_unit: external_declaration
  203                 | translation_unit external_declaration

  204 external_declaration: function_definition
  205                     | declaration

  206 declaration_list_opt: declaration_list
  207                     | %empty

  208 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  209 declaration_list: declaration
  210                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
KEYWORD_ (258)
AUTO_ (259) 100
BREAK_ (260) 200
CASE_ (261) 179
CHAR_ (262) 103
CONST_ (263) 128
CONTINUE_ (264) 199
DEFAULT_ (265) 180
DO_ (266) 195
DOUBLE_ (267) 108
ELSE_ (268) 192
ENUM_ (269) 119 120 121
EXTERN_ (270) 98
FLOAT_ (271) 107
FOR_ (272) 196 197
GOTO_ (273) 198
IF_ (274) 191 192
INLINE_ (275) 131
INT_ (276) 105
LONG_ (277) 106
REGISTER_ (278) 101
RESTRICT_ (279) 129
RETURN_ (280) 201
SHORT_ (281) 104
SIGNED_ (282) 109
SIZEOF_ (283) 27 28
STATIC_ (284) 99 138 139
STRUCT_ (285)
SWITCH_ (286) 193
TYPEDEF_ (287)
UNION_ (288)
UNSIGNED_ (289) 110
VOID_ (290) 102
VOLATILE_ (291) 130
WHILE_ (292) 194 195
BOOL_ (293) 111
COMPLEX_ (294) 112
IMAGINARY_ (295) 113
SQRBRK_OPEN_ (296) 11 137 138 139 140 170
SQRBRK_CLOSE_ (297) 11 137 138 139 140 170
PAREN_OPEN_ (298) 9 12 17 18 28 36 136 141 142 191 192 193 194 195
    196 197
PAREN_CLOSE_ (299) 9 12 17 18 28 36 136 141 142 191 192 193 194 195
    196 197
CURBRK_OPEN_ (300) 17 18 119 120 161 162 181
CURBRK_CLOSE_ (301) 17 18 119 120 161 162 181
DOT_ (302) 13 171
ARROW_ (303) 14
INCR_ (304) 15 24
DECR_ (305) 16 25
AND_ (306) 29 56
STAR_ (307) 30 38 140 143 144
PLUS_ (308) 31 42
MINUS_ (309) 32 43
TILDA_ (310) 33
NOT_ (311) 34
SLASH_ (312) 39
PERCENT_ (313) 40
LSHFT_ (314) 45
RSHFT_ (315) 46
LESS_ (316) 48
GRTH_ (317) 49
LESSE_ (318) 50
GRTHE_ (319) 51
EQUALS_ (320) 53
NOTEQ_ (321) 54
XOR_ (322) 58
OR_ (323) 60
ANDAND_ (324) 62
OROR_ (325) 64
QUES_ (326) 66
COLON_ (327) 66 178 179 180
SEMICOLON_ (328) 83 188 195 196 197 198 199 200 201
TRPDOTS_ (329) 152
ASSGN_ (330) 69 95 127 167
ASSGNMUL_ (331) 70
ASSGNDIV_ (332) 71
ASSGNPERCENT_ (333) 72
ASSGNPLUS_ (334) 73
ASSGNMINUS_ (335) 74
ASSGNLSHT_ (336) 75
ASSGNRSHT_ (337) 76
ASSGNAND_ (338) 77
ASSGNOR_ (339) 78
ASSGNXOR_ (340) 79
COMMA_ (341) 18 22 81 93 120 125 152 154 158 162 164
HASH_ (342)
PUNCTUATOR_ (343)
IDENTIFIER_ (344) 6 13 14 121 122 135 157 158 171 178 198
FLOAT_CONSTANT_ (345) 1
CHARACTER_CONSTANT_ (346) 2
STRING_LITERAL_ (347) 8
ENUMERATION_CONSTANT_ (348) 3 126 127
INTEGER_CONSTANT_ (349) 4
FRACTIONAL_CONSTANT_ (350) 5


Nonterminals, with rules where they appear

$accept (96)
    on left: 0
constant (97)
    on left: 1 2 3 4 5, on right: 7
primary_expression (98)
    on left: 6 7 8 9, on right: 10
postfix_expression (99)
    on left: 10 11 12 13 14 15 16 17 18, on right: 11 12 13 14 15 16
    23
argument_expression_list_opt (100)
    on left: 19 20, on right: 12
argument_expression_list (101)
    on left: 21 22, on right: 19 22
unary_expression (102)
    on left: 23 24 25 26 27 28, on right: 24 25 27 35 68
unary_operator (103)
    on left: 29 30 31 32 33 34, on right: 26
cast_expression (104)
    on left: 35 36, on right: 26 36 37 38 39 40
multiplicative_expression (105)
    on left: 37 38 39 40, on right: 38 39 40 41 42 43
additive_expression (106)
    on left: 41 42 43, on right: 42 43 44 45 46
shift_expression (107)
    on left: 44 45 46, on right: 45 46 47 48 49 50 51
relational_expression (108)
    on left: 47 48 49 50 51, on right: 48 49 50 51 52 53 54
equality_expression (109)
    on left: 52 53 54, on right: 53 54 55 56
AND_expression (110)
    on left: 55 56, on right: 56 57 58
exclusive_OR_expression (111)
    on left: 57 58, on right: 58 59 60
inclusive_OR_expression (112)
    on left: 59 60, on right: 60 61 62
logical_AND_expression (113)
    on left: 61 62, on right: 62 63 64
logical_OR_expression (114)
    on left: 63 64, on right: 64 65 66
conditional_expression (115)
    on left: 65 66, on right: 66 67 82
assignment_expression (116)
    on left: 67 68, on right: 21 22 68 80 81 138 139 147 160
assignment_operator (117)
    on left: 69 70 71 72 73 74 75 76 77 78 79, on right: 68
expression (118)
    on left: 80 81, on right: 9 11 66 81 189 191 192 193 194 195
constant_expression (119)
    on left: 82, on right: 127 170 179
declaration (120)
    on left: 83, on right: 186 197 205 209 210
init_declarator_list_opt (121)
    on left: 84 85, on right: 83
declaration_specifiers (122)
    on left: 86 87 88 89, on right: 83 90 155 156 208
declaration_specifiers_opt (123)
    on left: 90 91, on right: 86 87 88 89
init_declarator_list (124)
    on left: 92 93, on right: 84 93
init_declarator (125)
    on left: 94 95, on right: 92 93
identifier_list_opt (126)
    on left: 96 97, on right: 142
storage_class_specifier (127)
    on left: 98 99 100 101, on right: 86
type_specifier (128)
    on left: 102 103 104 105 106 107 108 109 110 111 112 113 114, on right:
    87 115
specifier_qualifier_list (129)
    on left: 115 116, on right: 117 159
specifier_qualifier_list_opt (130)
    on left: 117 118, on right: 115 116
enum_specifier (131)
    on left: 119 120 121, on right: 114
identifier_opt (132)
    on left: 122 123, on right: 119 120
enumerator_list (133)
    on left: 124 125, on right: 119 120 125
enumerator (134)
    on left: 126 127, on right: 124 125
type_qualifier (135)
    on left: 128 129 130, on right: 88 116 149 150
function_specifier (136)
    on left: 131, on right: 89
declarator (137)
    on left: 132, on right: 94 95 136 155 208
pointer_opt (138)
    on left: 133 134, on right: 132
direct_declarator (139)
    on left: 135 136 137 138 139 140 141 142, on right: 132 137 138
    139 140 141 142
pointer (140)
    on left: 143 144, on right: 133 144
type_qualifier_list_opt (141)
    on left: 145 146, on right: 137 138 140 143 144
assignment_expression_opt (142)
    on left: 147 148, on right: 137
type_qualifier_list (143)
    on left: 149 150, on right: 139 145 150
parameter_type_list (144)
    on left: 151 152, on right: 141
parameter_list (145)
    on left: 153 154, on right: 151 152 154
parameter_declaration (146)
    on left: 155 156, on right: 153 154
identifier_list (147)
    on left: 157 158, on right: 96 158
type_name (148)
    on left: 159, on right: 17 18 28 36
initializer (149)
    on left: 160 161 162, on right: 95 163 164
initializer_list (150)
    on left: 163 164, on right: 17 18 161 162 164
designation_opt (151)
    on left: 165 166, on right: 163 164
designation (152)
    on left: 167, on right: 165
designator_list (153)
    on left: 168 169, on right: 167 169
designator (154)
    on left: 170 171, on right: 168 169
statement (155)
    on left: 172 173 174 175 176 177, on right: 178 179 180 187 191
    192 193 194 195 196 197
labeled_statement (156)
    on left: 178 179 180, on right: 172
compound_statement (157)
    on left: 181, on right: 173 208
block_item_list_opt (158)
    on left: 182 183, on right: 181
block_item_list (159)
    on left: 184 185, on right: 182 185
block_item (160)
    on left: 186 187, on right: 184 185
expression_statement (161)
    on left: 188, on right: 174
expression_opt (162)
    on left: 189 190, on right: 188 196 197 201
selection_statement (163)
    on left: 191 192 193, on right: 175
iteration_statement (164)
    on left: 194 195 196 197, on right: 176
jump_statement (165)
    on left: 198 199 200 201, on right: 177
translation_unit (166)
    on left: 202 203, on right: 0 203
external_declaration (167)
    on left: 204 205, on right: 202 203
declaration_list_opt (168)
    on left: 206 207, on right: 208
function_definition (169)
    on left: 208, on right: 204
declaration_list (170)
    on left: 209 210, on right: 206 210


State 0

    0 $accept: . translation_unit $end

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  100 storage_class_specifier: AUTO_ .

    $default  reduce using rule 100 (storage_class_specifier)


State 2

  103 type_specifier: CHAR_ .

    $default  reduce using rule 103 (type_specifier)


State 3

  128 type_qualifier: CONST_ .

    $default  reduce using rule 128 (type_qualifier)


State 4

  108 type_specifier: DOUBLE_ .

    $default  reduce using rule 108 (type_specifier)


State 5

  119 enum_specifier: ENUM_ . identifier_opt CURBRK_OPEN_ enumerator_list CURBRK_CLOSE_
  120               | ENUM_ . identifier_opt CURBRK_OPEN_ enumerator_list COMMA_ CURBRK_CLOSE_
  121               | ENUM_ . IDENTIFIER_

    IDENTIFIER_  shift, and go to state 32

    $default  reduce using rule 123 (identifier_opt)

    identifier_opt  go to state 33


State 6

   98 storage_class_specifier: EXTERN_ .

    $default  reduce using rule 98 (storage_class_specifier)


State 7

  107 type_specifier: FLOAT_ .

    $default  reduce using rule 107 (type_specifier)


State 8

  131 function_specifier: INLINE_ .

    $default  reduce using rule 131 (function_specifier)


State 9

  105 type_specifier: INT_ .

    $default  reduce using rule 105 (type_specifier)


State 10

  106 type_specifier: LONG_ .

    $default  reduce using rule 106 (type_specifier)


State 11

  101 storage_class_specifier: REGISTER_ .

    $default  reduce using rule 101 (storage_class_specifier)


State 12

  129 type_qualifier: RESTRICT_ .

    $default  reduce using rule 129 (type_qualifier)


State 13

  104 type_specifier: SHORT_ .

    $default  reduce using rule 104 (type_specifier)


State 14

  109 type_specifier: SIGNED_ .

    $default  reduce using rule 109 (type_specifier)


State 15

   99 storage_class_specifier: STATIC_ .

    $default  reduce using rule 99 (storage_class_specifier)


State 16

  110 type_specifier: UNSIGNED_ .

    $default  reduce using rule 110 (type_specifier)


State 17

  102 type_specifier: VOID_ .

    $default  reduce using rule 102 (type_specifier)


State 18

  130 type_qualifier: VOLATILE_ .

    $default  reduce using rule 130 (type_qualifier)


State 19

  111 type_specifier: BOOL_ .

    $default  reduce using rule 111 (type_specifier)


State 20

  112 type_specifier: COMPLEX_ .

    $default  reduce using rule 112 (type_specifier)


State 21

  113 type_specifier: IMAGINARY_ .

    $default  reduce using rule 113 (type_specifier)


State 22

  205 external_declaration: declaration .

    $default  reduce using rule 205 (external_declaration)


State 23

   83 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON_
  208 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    STAR_  shift, and go to state 34

    SEMICOLON_  reduce using rule 85 (init_declarator_list_opt)
    $default    reduce using rule 134 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   86 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 91 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   87 declaration_specifiers: type_specifier . declaration_specifiers_opt

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 91 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  114 type_specifier: enum_specifier .

    $default  reduce using rule 114 (type_specifier)


State 27

   88 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 91 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   89 declaration_specifiers: function_specifier . declaration_specifiers_opt

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 91 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  203 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 46
    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  202 translation_unit: external_declaration .

    $default  reduce using rule 202 (translation_unit)


State 31

  204 external_declaration: function_definition .

    $default  reduce using rule 204 (external_declaration)


State 32

  121 enum_specifier: ENUM_ IDENTIFIER_ .
  122 identifier_opt: IDENTIFIER_ .

    CURBRK_OPEN_  reduce using rule 122 (identifier_opt)
    $default      reduce using rule 121 (enum_specifier)


State 33

  119 enum_specifier: ENUM_ identifier_opt . CURBRK_OPEN_ enumerator_list CURBRK_CLOSE_
  120               | ENUM_ identifier_opt . CURBRK_OPEN_ enumerator_list COMMA_ CURBRK_CLOSE_

    CURBRK_OPEN_  shift, and go to state 48


State 34

  143 pointer: STAR_ . type_qualifier_list_opt
  144        | STAR_ . type_qualifier_list_opt pointer

    CONST_     shift, and go to state 3
    RESTRICT_  shift, and go to state 12
    VOLATILE_  shift, and go to state 18

    $default  reduce using rule 146 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   83 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON_

    SEMICOLON_  shift, and go to state 52


State 36

   84 init_declarator_list_opt: init_declarator_list .
   93 init_declarator_list: init_declarator_list . COMMA_ init_declarator

    COMMA_  shift, and go to state 53

    $default  reduce using rule 84 (init_declarator_list_opt)


State 37

   92 init_declarator_list: init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 38

   94 init_declarator: declarator .
   95                | declarator . ASSGN_ initializer
  208 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21
    ASSGN_      shift, and go to state 54

    CURBRK_OPEN_  reduce using rule 207 (declaration_list_opt)
    $default      reduce using rule 94 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  132 declarator: pointer_opt . direct_declarator

    PAREN_OPEN_  shift, and go to state 59
    IDENTIFIER_  shift, and go to state 60

    direct_declarator  go to state 61


State 40

  133 pointer_opt: pointer .

    $default  reduce using rule 133 (pointer_opt)


State 41

   90 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 90 (declaration_specifiers_opt)


State 42

   86 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 43

   87 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 44

   88 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 45

   89 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 89 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  203 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 203 (translation_unit)


State 48

  119 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ . enumerator_list CURBRK_CLOSE_
  120               | ENUM_ identifier_opt CURBRK_OPEN_ . enumerator_list COMMA_ CURBRK_CLOSE_

    ENUMERATION_CONSTANT_  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  149 type_qualifier_list: type_qualifier .

    $default  reduce using rule 149 (type_qualifier_list)


State 50

  143 pointer: STAR_ type_qualifier_list_opt .
  144        | STAR_ type_qualifier_list_opt . pointer

    STAR_  shift, and go to state 34

    $default  reduce using rule 143 (pointer)

    pointer  go to state 65


State 51

  145 type_qualifier_list_opt: type_qualifier_list .
  150 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_     shift, and go to state 3
    RESTRICT_  shift, and go to state 12
    VOLATILE_  shift, and go to state 18

    $default  reduce using rule 145 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   83 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON_ .

    $default  reduce using rule 83 (declaration)


State 53

   93 init_declarator_list: init_declarator_list COMMA_ . init_declarator

    STAR_  shift, and go to state 34

    $default  reduce using rule 134 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   95 init_declarator: declarator ASSGN_ . initializer

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 71
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 105


State 55

  209 declaration_list: declaration .

    $default  reduce using rule 209 (declaration_list)


State 56

   83 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON_

    STAR_  shift, and go to state 34

    SEMICOLON_  reduce using rule 85 (init_declarator_list_opt)
    $default    reduce using rule 134 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  208 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURBRK_OPEN_  shift, and go to state 106

    compound_statement  go to state 107


State 58

  206 declaration_list_opt: declaration_list .
  210 declaration_list: declaration_list . declaration

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 206 (declaration_list_opt)

    declaration              go to state 108
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  136 direct_declarator: PAREN_OPEN_ . declarator PAREN_CLOSE_

    STAR_  shift, and go to state 34

    $default  reduce using rule 134 (pointer_opt)

    declarator   go to state 109
    pointer_opt  go to state 39
    pointer      go to state 40


State 60

  135 direct_declarator: IDENTIFIER_ .

    $default  reduce using rule 135 (direct_declarator)


State 61

  132 declarator: pointer_opt direct_declarator .
  137 direct_declarator: direct_declarator . SQRBRK_OPEN_ type_qualifier_list_opt assignment_expression_opt SQRBRK_CLOSE_
  138                  | direct_declarator . SQRBRK_OPEN_ STATIC_ type_qualifier_list_opt assignment_expression SQRBRK_CLOSE_
  139                  | direct_declarator . SQRBRK_OPEN_ type_qualifier_list STATIC_ assignment_expression SQRBRK_CLOSE_
  140                  | direct_declarator . SQRBRK_OPEN_ type_qualifier_list_opt STAR_ SQRBRK_CLOSE_
  141                  | direct_declarator . PAREN_OPEN_ parameter_type_list PAREN_CLOSE_
  142                  | direct_declarator . PAREN_OPEN_ identifier_list_opt PAREN_CLOSE_

    SQRBRK_OPEN_  shift, and go to state 110
    PAREN_OPEN_   shift, and go to state 111

    $default  reduce using rule 132 (declarator)


State 62

  126 enumerator: ENUMERATION_CONSTANT_ .
  127           | ENUMERATION_CONSTANT_ . ASSGN_ constant_expression

    ASSGN_  shift, and go to state 112

    $default  reduce using rule 126 (enumerator)


State 63

  119 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list . CURBRK_CLOSE_
  120               | ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list . COMMA_ CURBRK_CLOSE_
  125 enumerator_list: enumerator_list . COMMA_ enumerator

    CURBRK_CLOSE_  shift, and go to state 113
    COMMA_         shift, and go to state 114


State 64

  124 enumerator_list: enumerator .

    $default  reduce using rule 124 (enumerator_list)


State 65

  144 pointer: STAR_ type_qualifier_list_opt pointer .

    $default  reduce using rule 144 (pointer)


State 66

  150 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 150 (type_qualifier_list)


State 67

   93 init_declarator_list: init_declarator_list COMMA_ init_declarator .

    $default  reduce using rule 93 (init_declarator_list)


State 68

   94 init_declarator: declarator .
   95                | declarator . ASSGN_ initializer

    ASSGN_  shift, and go to state 54

    $default  reduce using rule 94 (init_declarator)


State 69

   27 unary_expression: SIZEOF_ . unary_expression
   28                 | SIZEOF_ . PAREN_OPEN_ type_name PAREN_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 115
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 116
    unary_operator      go to state 91


State 70

    9 primary_expression: PAREN_OPEN_ . expression PAREN_CLOSE_
   17 postfix_expression: PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   36 cast_expression: PAREN_OPEN_ . type_name PAREN_CLOSE_ cast_expression

    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    FLOAT_                 shift, and go to state 7
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    RESTRICT_              shift, and go to state 12
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    type_name                  go to state 122


State 71

  161 initializer: CURBRK_OPEN_ . initializer_list CURBRK_CLOSE_
  162            | CURBRK_OPEN_ . initializer_list COMMA_ CURBRK_CLOSE_

    SQRBRK_OPEN_  shift, and go to state 123
    DOT_          shift, and go to state 124

    $default  reduce using rule 166 (designation_opt)

    initializer_list  go to state 125
    designation_opt   go to state 126
    designation       go to state 127
    designator_list   go to state 128
    designator        go to state 129


State 72

   24 unary_expression: INCR_ . unary_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 130
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 131
    unary_operator      go to state 91


State 73

   25 unary_expression: DECR_ . unary_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 130
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 132
    unary_operator      go to state 91


State 74

   29 unary_operator: AND_ .

    $default  reduce using rule 29 (unary_operator)


State 75

   30 unary_operator: STAR_ .

    $default  reduce using rule 30 (unary_operator)


State 76

   31 unary_operator: PLUS_ .

    $default  reduce using rule 31 (unary_operator)


State 77

   32 unary_operator: MINUS_ .

    $default  reduce using rule 32 (unary_operator)


State 78

   33 unary_operator: TILDA_ .

    $default  reduce using rule 33 (unary_operator)


State 79

   34 unary_operator: NOT_ .

    $default  reduce using rule 34 (unary_operator)


State 80

    6 primary_expression: IDENTIFIER_ .

    $default  reduce using rule 6 (primary_expression)


State 81

    1 constant: FLOAT_CONSTANT_ .

    $default  reduce using rule 1 (constant)


State 82

    2 constant: CHARACTER_CONSTANT_ .

    $default  reduce using rule 2 (constant)


State 83

    8 primary_expression: STRING_LITERAL_ .

    $default  reduce using rule 8 (primary_expression)


State 84

    3 constant: ENUMERATION_CONSTANT_ .

    $default  reduce using rule 3 (constant)


State 85

    4 constant: INTEGER_CONSTANT_ .

    $default  reduce using rule 4 (constant)


State 86

    5 constant: FRACTIONAL_CONSTANT_ .

    $default  reduce using rule 5 (constant)


State 87

    7 primary_expression: constant .

    $default  reduce using rule 7 (primary_expression)


State 88

   10 postfix_expression: primary_expression .

    $default  reduce using rule 10 (postfix_expression)


State 89

   11 postfix_expression: postfix_expression . SQRBRK_OPEN_ expression SQRBRK_CLOSE_
   12                   | postfix_expression . PAREN_OPEN_ argument_expression_list_opt PAREN_CLOSE_
   13                   | postfix_expression . DOT_ IDENTIFIER_
   14                   | postfix_expression . ARROW_ IDENTIFIER_
   15                   | postfix_expression . INCR_
   16                   | postfix_expression . DECR_
   23 unary_expression: postfix_expression .

    SQRBRK_OPEN_  shift, and go to state 133
    PAREN_OPEN_   shift, and go to state 134
    DOT_          shift, and go to state 135
    ARROW_        shift, and go to state 136
    INCR_         shift, and go to state 137
    DECR_         shift, and go to state 138

    $default  reduce using rule 23 (unary_expression)


State 90

   35 cast_expression: unary_expression .
   68 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSGN_         shift, and go to state 139
    ASSGNMUL_      shift, and go to state 140
    ASSGNDIV_      shift, and go to state 141
    ASSGNPERCENT_  shift, and go to state 142
    ASSGNPLUS_     shift, and go to state 143
    ASSGNMINUS_    shift, and go to state 144
    ASSGNLSHT_     shift, and go to state 145
    ASSGNRSHT_     shift, and go to state 146
    ASSGNAND_      shift, and go to state 147
    ASSGNOR_       shift, and go to state 148
    ASSGNXOR_      shift, and go to state 149

    $default  reduce using rule 35 (cast_expression)

    assignment_operator  go to state 150


State 91

   26 unary_expression: unary_operator . cast_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 151
    unary_operator      go to state 91
    cast_expression     go to state 152


State 92

   37 multiplicative_expression: cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 93

   38 multiplicative_expression: multiplicative_expression . STAR_ cast_expression
   39                          | multiplicative_expression . SLASH_ cast_expression
   40                          | multiplicative_expression . PERCENT_ cast_expression
   41 additive_expression: multiplicative_expression .

    STAR_     shift, and go to state 153
    SLASH_    shift, and go to state 154
    PERCENT_  shift, and go to state 155

    $default  reduce using rule 41 (additive_expression)


State 94

   42 additive_expression: additive_expression . PLUS_ multiplicative_expression
   43                    | additive_expression . MINUS_ multiplicative_expression
   44 shift_expression: additive_expression .

    PLUS_   shift, and go to state 156
    MINUS_  shift, and go to state 157

    $default  reduce using rule 44 (shift_expression)


State 95

   45 shift_expression: shift_expression . LSHFT_ additive_expression
   46                 | shift_expression . RSHFT_ additive_expression
   47 relational_expression: shift_expression .

    LSHFT_  shift, and go to state 158
    RSHFT_  shift, and go to state 159

    $default  reduce using rule 47 (relational_expression)


State 96

   48 relational_expression: relational_expression . LESS_ shift_expression
   49                      | relational_expression . GRTH_ shift_expression
   50                      | relational_expression . LESSE_ shift_expression
   51                      | relational_expression . GRTHE_ shift_expression
   52 equality_expression: relational_expression .

    LESS_   shift, and go to state 160
    GRTH_   shift, and go to state 161
    LESSE_  shift, and go to state 162
    GRTHE_  shift, and go to state 163

    $default  reduce using rule 52 (equality_expression)


State 97

   53 equality_expression: equality_expression . EQUALS_ relational_expression
   54                    | equality_expression . NOTEQ_ relational_expression
   55 AND_expression: equality_expression .

    EQUALS_  shift, and go to state 164
    NOTEQ_   shift, and go to state 165

    $default  reduce using rule 55 (AND_expression)


State 98

   56 AND_expression: AND_expression . AND_ equality_expression
   57 exclusive_OR_expression: AND_expression .

    AND_  shift, and go to state 166

    $default  reduce using rule 57 (exclusive_OR_expression)


State 99

   58 exclusive_OR_expression: exclusive_OR_expression . XOR_ AND_expression
   59 inclusive_OR_expression: exclusive_OR_expression .

    XOR_  shift, and go to state 167

    $default  reduce using rule 59 (inclusive_OR_expression)


State 100

   60 inclusive_OR_expression: inclusive_OR_expression . OR_ exclusive_OR_expression
   61 logical_AND_expression: inclusive_OR_expression .

    OR_  shift, and go to state 168

    $default  reduce using rule 61 (logical_AND_expression)


State 101

   62 logical_AND_expression: logical_AND_expression . ANDAND_ inclusive_OR_expression
   63 logical_OR_expression: logical_AND_expression .

    ANDAND_  shift, and go to state 169

    $default  reduce using rule 63 (logical_OR_expression)


State 102

   64 logical_OR_expression: logical_OR_expression . OROR_ logical_AND_expression
   65 conditional_expression: logical_OR_expression .
   66                       | logical_OR_expression . QUES_ expression COLON_ conditional_expression

    OROR_  shift, and go to state 170
    QUES_  shift, and go to state 171

    $default  reduce using rule 65 (conditional_expression)


State 103

   67 assignment_expression: conditional_expression .

    $default  reduce using rule 67 (assignment_expression)


State 104

  160 initializer: assignment_expression .

    $default  reduce using rule 160 (initializer)


State 105

   95 init_declarator: declarator ASSGN_ initializer .

    $default  reduce using rule 95 (init_declarator)


State 106

  181 compound_statement: CURBRK_OPEN_ . block_item_list_opt CURBRK_CLOSE_

    AUTO_                  shift, and go to state 1
    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    EXTERN_                shift, and go to state 6
    FLOAT_                 shift, and go to state 7
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    INLINE_                shift, and go to state 8
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    REGISTER_              shift, and go to state 11
    RESTRICT_              shift, and go to state 12
    RETURN_                shift, and go to state 180
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    STATIC_                shift, and go to state 15
    SWITCH_                shift, and go to state 181
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    WHILE_                 shift, and go to state 182
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    SEMICOLON_  reduce using rule 190 (expression_opt)
    $default    reduce using rule 183 (block_item_list_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    declaration                go to state 185
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 186
    labeled_statement          go to state 187
    compound_statement         go to state 188
    block_item_list_opt        go to state 189
    block_item_list            go to state 190
    block_item                 go to state 191
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 107

  208 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 208 (function_definition)


State 108

  210 declaration_list: declaration_list declaration .

    $default  reduce using rule 210 (declaration_list)


State 109

  136 direct_declarator: PAREN_OPEN_ declarator . PAREN_CLOSE_

    PAREN_CLOSE_  shift, and go to state 197


State 110

  137 direct_declarator: direct_declarator SQRBRK_OPEN_ . type_qualifier_list_opt assignment_expression_opt SQRBRK_CLOSE_
  138                  | direct_declarator SQRBRK_OPEN_ . STATIC_ type_qualifier_list_opt assignment_expression SQRBRK_CLOSE_
  139                  | direct_declarator SQRBRK_OPEN_ . type_qualifier_list STATIC_ assignment_expression SQRBRK_CLOSE_
  140                  | direct_declarator SQRBRK_OPEN_ . type_qualifier_list_opt STAR_ SQRBRK_CLOSE_

    CONST_     shift, and go to state 3
    RESTRICT_  shift, and go to state 12
    STATIC_    shift, and go to state 198
    VOLATILE_  shift, and go to state 18

    $default  reduce using rule 146 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 199
    type_qualifier_list      go to state 200


State 111

  141 direct_declarator: direct_declarator PAREN_OPEN_ . parameter_type_list PAREN_CLOSE_
  142                  | direct_declarator PAREN_OPEN_ . identifier_list_opt PAREN_CLOSE_

    AUTO_        shift, and go to state 1
    CHAR_        shift, and go to state 2
    CONST_       shift, and go to state 3
    DOUBLE_      shift, and go to state 4
    ENUM_        shift, and go to state 5
    EXTERN_      shift, and go to state 6
    FLOAT_       shift, and go to state 7
    INLINE_      shift, and go to state 8
    INT_         shift, and go to state 9
    LONG_        shift, and go to state 10
    REGISTER_    shift, and go to state 11
    RESTRICT_    shift, and go to state 12
    SHORT_       shift, and go to state 13
    SIGNED_      shift, and go to state 14
    STATIC_      shift, and go to state 15
    UNSIGNED_    shift, and go to state 16
    VOID_        shift, and go to state 17
    VOLATILE_    shift, and go to state 18
    BOOL_        shift, and go to state 19
    COMPLEX_     shift, and go to state 20
    IMAGINARY_   shift, and go to state 21
    IDENTIFIER_  shift, and go to state 201

    $default  reduce using rule 97 (identifier_list_opt)

    declaration_specifiers   go to state 202
    identifier_list_opt      go to state 203
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 204
    parameter_list           go to state 205
    parameter_declaration    go to state 206
    identifier_list          go to state 207


State 112

  127 enumerator: ENUMERATION_CONSTANT_ ASSGN_ . constant_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 208
    constant_expression        go to state 209


State 113

  119 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list CURBRK_CLOSE_ .

    $default  reduce using rule 119 (enum_specifier)


State 114

  120 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list COMMA_ . CURBRK_CLOSE_
  125 enumerator_list: enumerator_list COMMA_ . enumerator

    CURBRK_CLOSE_          shift, and go to state 210
    ENUMERATION_CONSTANT_  shift, and go to state 62

    enumerator  go to state 211


State 115

    9 primary_expression: PAREN_OPEN_ . expression PAREN_CLOSE_
   17 postfix_expression: PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   28 unary_expression: SIZEOF_ PAREN_OPEN_ . type_name PAREN_CLOSE_

    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    FLOAT_                 shift, and go to state 7
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    RESTRICT_              shift, and go to state 12
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    type_name                  go to state 212


State 116

   27 unary_expression: SIZEOF_ unary_expression .

    $default  reduce using rule 27 (unary_expression)


State 117

   80 expression: assignment_expression .

    $default  reduce using rule 80 (expression)


State 118

    9 primary_expression: PAREN_OPEN_ expression . PAREN_CLOSE_
   81 expression: expression . COMMA_ assignment_expression

    PAREN_CLOSE_  shift, and go to state 213
    COMMA_        shift, and go to state 214


State 119

  115 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    FLOAT_      shift, and go to state 7
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 118 (specifier_qualifier_list_opt)

    type_specifier                go to state 119
    specifier_qualifier_list      go to state 215
    specifier_qualifier_list_opt  go to state 216
    enum_specifier                go to state 26
    type_qualifier                go to state 121


State 120

  159 type_name: specifier_qualifier_list .

    $default  reduce using rule 159 (type_name)


State 121

  116 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    FLOAT_      shift, and go to state 7
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21

    $default  reduce using rule 118 (specifier_qualifier_list_opt)

    type_specifier                go to state 119
    specifier_qualifier_list      go to state 215
    specifier_qualifier_list_opt  go to state 217
    enum_specifier                go to state 26
    type_qualifier                go to state 121


State 122

   17 postfix_expression: PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   36 cast_expression: PAREN_OPEN_ type_name . PAREN_CLOSE_ cast_expression

    PAREN_CLOSE_  shift, and go to state 218


State 123

  170 designator: SQRBRK_OPEN_ . constant_expression SQRBRK_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 208
    constant_expression        go to state 219


State 124

  171 designator: DOT_ . IDENTIFIER_

    IDENTIFIER_  shift, and go to state 220


State 125

  161 initializer: CURBRK_OPEN_ initializer_list . CURBRK_CLOSE_
  162            | CURBRK_OPEN_ initializer_list . COMMA_ CURBRK_CLOSE_
  164 initializer_list: initializer_list . COMMA_ designation_opt initializer

    CURBRK_CLOSE_  shift, and go to state 221
    COMMA_         shift, and go to state 222


State 126

  163 initializer_list: designation_opt . initializer

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 71
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 223


State 127

  165 designation_opt: designation .

    $default  reduce using rule 165 (designation_opt)


State 128

  167 designation: designator_list . ASSGN_
  169 designator_list: designator_list . designator

    SQRBRK_OPEN_  shift, and go to state 123
    DOT_          shift, and go to state 124
    ASSGN_        shift, and go to state 224

    designator  go to state 225


State 129

  168 designator_list: designator .

    $default  reduce using rule 168 (designator_list)


State 130

    9 primary_expression: PAREN_OPEN_ . expression PAREN_CLOSE_
   17 postfix_expression: PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ . type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_

    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    FLOAT_                 shift, and go to state 7
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    RESTRICT_              shift, and go to state 12
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 118
    type_specifier             go to state 119
    specifier_qualifier_list   go to state 120
    enum_specifier             go to state 26
    type_qualifier             go to state 121
    type_name                  go to state 226


State 131

   24 unary_expression: INCR_ unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 132

   25 unary_expression: DECR_ unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 133

   11 postfix_expression: postfix_expression SQRBRK_OPEN_ . expression SQRBRK_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 227


State 134

   12 postfix_expression: postfix_expression PAREN_OPEN_ . argument_expression_list_opt PAREN_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 20 (argument_expression_list_opt)

    constant                      go to state 87
    primary_expression            go to state 88
    postfix_expression            go to state 89
    argument_expression_list_opt  go to state 228
    argument_expression_list      go to state 229
    unary_expression              go to state 90
    unary_operator                go to state 91
    cast_expression               go to state 92
    multiplicative_expression     go to state 93
    additive_expression           go to state 94
    shift_expression              go to state 95
    relational_expression         go to state 96
    equality_expression           go to state 97
    AND_expression                go to state 98
    exclusive_OR_expression       go to state 99
    inclusive_OR_expression       go to state 100
    logical_AND_expression        go to state 101
    logical_OR_expression         go to state 102
    conditional_expression        go to state 103
    assignment_expression         go to state 230


State 135

   13 postfix_expression: postfix_expression DOT_ . IDENTIFIER_

    IDENTIFIER_  shift, and go to state 231


State 136

   14 postfix_expression: postfix_expression ARROW_ . IDENTIFIER_

    IDENTIFIER_  shift, and go to state 232


State 137

   15 postfix_expression: postfix_expression INCR_ .

    $default  reduce using rule 15 (postfix_expression)


State 138

   16 postfix_expression: postfix_expression DECR_ .

    $default  reduce using rule 16 (postfix_expression)


State 139

   69 assignment_operator: ASSGN_ .

    $default  reduce using rule 69 (assignment_operator)


State 140

   70 assignment_operator: ASSGNMUL_ .

    $default  reduce using rule 70 (assignment_operator)


State 141

   71 assignment_operator: ASSGNDIV_ .

    $default  reduce using rule 71 (assignment_operator)


State 142

   72 assignment_operator: ASSGNPERCENT_ .

    $default  reduce using rule 72 (assignment_operator)


State 143

   73 assignment_operator: ASSGNPLUS_ .

    $default  reduce using rule 73 (assignment_operator)


State 144

   74 assignment_operator: ASSGNMINUS_ .

    $default  reduce using rule 74 (assignment_operator)


State 145

   75 assignment_operator: ASSGNLSHT_ .

    $default  reduce using rule 75 (assignment_operator)


State 146

   76 assignment_operator: ASSGNRSHT_ .

    $default  reduce using rule 76 (assignment_operator)


State 147

   77 assignment_operator: ASSGNAND_ .

    $default  reduce using rule 77 (assignment_operator)


State 148

   78 assignment_operator: ASSGNOR_ .

    $default  reduce using rule 78 (assignment_operator)


State 149

   79 assignment_operator: ASSGNXOR_ .

    $default  reduce using rule 79 (assignment_operator)


State 150

   68 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 233


State 151

   35 cast_expression: unary_expression .

    $default  reduce using rule 35 (cast_expression)


State 152

   26 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 26 (unary_expression)


State 153

   38 multiplicative_expression: multiplicative_expression STAR_ . cast_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 151
    unary_operator      go to state 91
    cast_expression     go to state 234


State 154

   39 multiplicative_expression: multiplicative_expression SLASH_ . cast_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 151
    unary_operator      go to state 91
    cast_expression     go to state 235


State 155

   40 multiplicative_expression: multiplicative_expression PERCENT_ . cast_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 151
    unary_operator      go to state 91
    cast_expression     go to state 236


State 156

   42 additive_expression: additive_expression PLUS_ . multiplicative_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 237


State 157

   43 additive_expression: additive_expression MINUS_ . multiplicative_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 238


State 158

   45 shift_expression: shift_expression LSHFT_ . additive_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 239


State 159

   46 shift_expression: shift_expression RSHFT_ . additive_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 240


State 160

   48 relational_expression: relational_expression LESS_ . shift_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 241


State 161

   49 relational_expression: relational_expression GRTH_ . shift_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 242


State 162

   50 relational_expression: relational_expression LESSE_ . shift_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 243


State 163

   51 relational_expression: relational_expression GRTHE_ . shift_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 244


State 164

   53 equality_expression: equality_expression EQUALS_ . relational_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 245


State 165

   54 equality_expression: equality_expression NOTEQ_ . relational_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 246


State 166

   56 AND_expression: AND_expression AND_ . equality_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 247


State 167

   58 exclusive_OR_expression: exclusive_OR_expression XOR_ . AND_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 248


State 168

   60 inclusive_OR_expression: inclusive_OR_expression OR_ . exclusive_OR_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 249


State 169

   62 logical_AND_expression: logical_AND_expression ANDAND_ . inclusive_OR_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 250


State 170

   64 logical_OR_expression: logical_OR_expression OROR_ . logical_AND_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 251


State 171

   66 conditional_expression: logical_OR_expression QUES_ . expression COLON_ conditional_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 252


State 172

  200 jump_statement: BREAK_ . SEMICOLON_

    SEMICOLON_  shift, and go to state 253


State 173

  179 labeled_statement: CASE_ . constant_expression COLON_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 208
    constant_expression        go to state 254


State 174

  199 jump_statement: CONTINUE_ . SEMICOLON_

    SEMICOLON_  shift, and go to state 255


State 175

  180 labeled_statement: DEFAULT_ . COLON_ statement

    COLON_  shift, and go to state 256


State 176

  195 iteration_statement: DO_ . statement WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ SEMICOLON_

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 257
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 177

  196 iteration_statement: FOR_ . PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement
  197                    | FOR_ . PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    PAREN_OPEN_  shift, and go to state 258


State 178

  198 jump_statement: GOTO_ . IDENTIFIER_ SEMICOLON_

    IDENTIFIER_  shift, and go to state 259


State 179

  191 selection_statement: IF_ . PAREN_OPEN_ expression PAREN_CLOSE_ statement
  192                    | IF_ . PAREN_OPEN_ expression PAREN_CLOSE_ statement ELSE_ statement

    PAREN_OPEN_  shift, and go to state 260


State 180

  201 jump_statement: RETURN_ . expression_opt SEMICOLON_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 261


State 181

  193 selection_statement: SWITCH_ . PAREN_OPEN_ expression PAREN_CLOSE_ statement

    PAREN_OPEN_  shift, and go to state 262


State 182

  194 iteration_statement: WHILE_ . PAREN_OPEN_ expression PAREN_CLOSE_ statement

    PAREN_OPEN_  shift, and go to state 263


State 183

    6 primary_expression: IDENTIFIER_ .
  178 labeled_statement: IDENTIFIER_ . COLON_ statement

    COLON_  shift, and go to state 264

    $default  reduce using rule 6 (primary_expression)


State 184

   81 expression: expression . COMMA_ assignment_expression
  189 expression_opt: expression .

    COMMA_  shift, and go to state 214

    $default  reduce using rule 189 (expression_opt)


State 185

  186 block_item: declaration .

    $default  reduce using rule 186 (block_item)


State 186

  187 block_item: statement .

    $default  reduce using rule 187 (block_item)


State 187

  172 statement: labeled_statement .

    $default  reduce using rule 172 (statement)


State 188

  173 statement: compound_statement .

    $default  reduce using rule 173 (statement)


State 189

  181 compound_statement: CURBRK_OPEN_ block_item_list_opt . CURBRK_CLOSE_

    CURBRK_CLOSE_  shift, and go to state 265


State 190

  182 block_item_list_opt: block_item_list .
  185 block_item_list: block_item_list . block_item

    AUTO_                  shift, and go to state 1
    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    EXTERN_                shift, and go to state 6
    FLOAT_                 shift, and go to state 7
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    INLINE_                shift, and go to state 8
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    REGISTER_              shift, and go to state 11
    RESTRICT_              shift, and go to state 12
    RETURN_                shift, and go to state 180
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    STATIC_                shift, and go to state 15
    SWITCH_                shift, and go to state 181
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    WHILE_                 shift, and go to state 182
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    SEMICOLON_  reduce using rule 190 (expression_opt)
    $default    reduce using rule 182 (block_item_list_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    declaration                go to state 185
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 186
    labeled_statement          go to state 187
    compound_statement         go to state 188
    block_item                 go to state 266
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 191

  184 block_item_list: block_item .

    $default  reduce using rule 184 (block_item_list)


State 192

  174 statement: expression_statement .

    $default  reduce using rule 174 (statement)


State 193

  188 expression_statement: expression_opt . SEMICOLON_

    SEMICOLON_  shift, and go to state 267


State 194

  175 statement: selection_statement .

    $default  reduce using rule 175 (statement)


State 195

  176 statement: iteration_statement .

    $default  reduce using rule 176 (statement)


State 196

  177 statement: jump_statement .

    $default  reduce using rule 177 (statement)


State 197

  136 direct_declarator: PAREN_OPEN_ declarator PAREN_CLOSE_ .

    $default  reduce using rule 136 (direct_declarator)


State 198

  138 direct_declarator: direct_declarator SQRBRK_OPEN_ STATIC_ . type_qualifier_list_opt assignment_expression SQRBRK_CLOSE_

    CONST_     shift, and go to state 3
    RESTRICT_  shift, and go to state 12
    VOLATILE_  shift, and go to state 18

    $default  reduce using rule 146 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 268
    type_qualifier_list      go to state 51


State 199

  137 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt . assignment_expression_opt SQRBRK_CLOSE_
  140                  | direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt . STAR_ SQRBRK_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 269
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 148 (assignment_expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 270
    assignment_expression_opt  go to state 271


State 200

  139 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list . STATIC_ assignment_expression SQRBRK_CLOSE_
  145 type_qualifier_list_opt: type_qualifier_list .
  150 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST_     shift, and go to state 3
    RESTRICT_  shift, and go to state 12
    STATIC_    shift, and go to state 272
    VOLATILE_  shift, and go to state 18

    $default  reduce using rule 145 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 201

  157 identifier_list: IDENTIFIER_ .

    $default  reduce using rule 157 (identifier_list)


State 202

  155 parameter_declaration: declaration_specifiers . declarator
  156                      | declaration_specifiers .

    STAR_  shift, and go to state 34

    PAREN_CLOSE_  reduce using rule 156 (parameter_declaration)
    COMMA_        reduce using rule 156 (parameter_declaration)
    $default      reduce using rule 134 (pointer_opt)

    declarator   go to state 273
    pointer_opt  go to state 39
    pointer      go to state 40


State 203

  142 direct_declarator: direct_declarator PAREN_OPEN_ identifier_list_opt . PAREN_CLOSE_

    PAREN_CLOSE_  shift, and go to state 274


State 204

  141 direct_declarator: direct_declarator PAREN_OPEN_ parameter_type_list . PAREN_CLOSE_

    PAREN_CLOSE_  shift, and go to state 275


State 205

  151 parameter_type_list: parameter_list .
  152                    | parameter_list . COMMA_ TRPDOTS_
  154 parameter_list: parameter_list . COMMA_ parameter_declaration

    COMMA_  shift, and go to state 276

    $default  reduce using rule 151 (parameter_type_list)


State 206

  153 parameter_list: parameter_declaration .

    $default  reduce using rule 153 (parameter_list)


State 207

   96 identifier_list_opt: identifier_list .
  158 identifier_list: identifier_list . COMMA_ IDENTIFIER_

    COMMA_  shift, and go to state 277

    $default  reduce using rule 96 (identifier_list_opt)


State 208

   82 constant_expression: conditional_expression .

    $default  reduce using rule 82 (constant_expression)


State 209

  127 enumerator: ENUMERATION_CONSTANT_ ASSGN_ constant_expression .

    $default  reduce using rule 127 (enumerator)


State 210

  120 enum_specifier: ENUM_ identifier_opt CURBRK_OPEN_ enumerator_list COMMA_ CURBRK_CLOSE_ .

    $default  reduce using rule 120 (enum_specifier)


State 211

  125 enumerator_list: enumerator_list COMMA_ enumerator .

    $default  reduce using rule 125 (enumerator_list)


State 212

   17 postfix_expression: PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   28 unary_expression: SIZEOF_ PAREN_OPEN_ type_name . PAREN_CLOSE_

    PAREN_CLOSE_  shift, and go to state 278


State 213

    9 primary_expression: PAREN_OPEN_ expression PAREN_CLOSE_ .

    $default  reduce using rule 9 (primary_expression)


State 214

   81 expression: expression COMMA_ . assignment_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 279


State 215

  117 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 117 (specifier_qualifier_list_opt)


State 216

  115 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 115 (specifier_qualifier_list)


State 217

  116 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 116 (specifier_qualifier_list)


State 218

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   36 cast_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ . cast_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 280
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant            go to state 87
    primary_expression  go to state 88
    postfix_expression  go to state 89
    unary_expression    go to state 151
    unary_operator      go to state 91
    cast_expression     go to state 281


State 219

  170 designator: SQRBRK_OPEN_ constant_expression . SQRBRK_CLOSE_

    SQRBRK_CLOSE_  shift, and go to state 282


State 220

  171 designator: DOT_ IDENTIFIER_ .

    $default  reduce using rule 171 (designator)


State 221

  161 initializer: CURBRK_OPEN_ initializer_list CURBRK_CLOSE_ .

    $default  reduce using rule 161 (initializer)


State 222

  162 initializer: CURBRK_OPEN_ initializer_list COMMA_ . CURBRK_CLOSE_
  164 initializer_list: initializer_list COMMA_ . designation_opt initializer

    SQRBRK_OPEN_   shift, and go to state 123
    CURBRK_CLOSE_  shift, and go to state 283
    DOT_           shift, and go to state 124

    $default  reduce using rule 166 (designation_opt)

    designation_opt  go to state 284
    designation      go to state 127
    designator_list  go to state 128
    designator       go to state 129


State 223

  163 initializer_list: designation_opt initializer .

    $default  reduce using rule 163 (initializer_list)


State 224

  167 designation: designator_list ASSGN_ .

    $default  reduce using rule 167 (designation)


State 225

  169 designator_list: designator_list designator .

    $default  reduce using rule 169 (designator_list)


State 226

   17 postfix_expression: PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name . PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_

    PAREN_CLOSE_  shift, and go to state 285


State 227

   11 postfix_expression: postfix_expression SQRBRK_OPEN_ expression . SQRBRK_CLOSE_
   81 expression: expression . COMMA_ assignment_expression

    SQRBRK_CLOSE_  shift, and go to state 286
    COMMA_         shift, and go to state 214


State 228

   12 postfix_expression: postfix_expression PAREN_OPEN_ argument_expression_list_opt . PAREN_CLOSE_

    PAREN_CLOSE_  shift, and go to state 287


State 229

   19 argument_expression_list_opt: argument_expression_list .
   22 argument_expression_list: argument_expression_list . COMMA_ assignment_expression

    COMMA_  shift, and go to state 288

    $default  reduce using rule 19 (argument_expression_list_opt)


State 230

   21 argument_expression_list: assignment_expression .

    $default  reduce using rule 21 (argument_expression_list)


State 231

   13 postfix_expression: postfix_expression DOT_ IDENTIFIER_ .

    $default  reduce using rule 13 (postfix_expression)


State 232

   14 postfix_expression: postfix_expression ARROW_ IDENTIFIER_ .

    $default  reduce using rule 14 (postfix_expression)


State 233

   68 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 234

   38 multiplicative_expression: multiplicative_expression STAR_ cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 235

   39 multiplicative_expression: multiplicative_expression SLASH_ cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 236

   40 multiplicative_expression: multiplicative_expression PERCENT_ cast_expression .

    $default  reduce using rule 40 (multiplicative_expression)


State 237

   38 multiplicative_expression: multiplicative_expression . STAR_ cast_expression
   39                          | multiplicative_expression . SLASH_ cast_expression
   40                          | multiplicative_expression . PERCENT_ cast_expression
   42 additive_expression: additive_expression PLUS_ multiplicative_expression .

    STAR_     shift, and go to state 153
    SLASH_    shift, and go to state 154
    PERCENT_  shift, and go to state 155

    $default  reduce using rule 42 (additive_expression)


State 238

   38 multiplicative_expression: multiplicative_expression . STAR_ cast_expression
   39                          | multiplicative_expression . SLASH_ cast_expression
   40                          | multiplicative_expression . PERCENT_ cast_expression
   43 additive_expression: additive_expression MINUS_ multiplicative_expression .

    STAR_     shift, and go to state 153
    SLASH_    shift, and go to state 154
    PERCENT_  shift, and go to state 155

    $default  reduce using rule 43 (additive_expression)


State 239

   42 additive_expression: additive_expression . PLUS_ multiplicative_expression
   43                    | additive_expression . MINUS_ multiplicative_expression
   45 shift_expression: shift_expression LSHFT_ additive_expression .

    PLUS_   shift, and go to state 156
    MINUS_  shift, and go to state 157

    $default  reduce using rule 45 (shift_expression)


State 240

   42 additive_expression: additive_expression . PLUS_ multiplicative_expression
   43                    | additive_expression . MINUS_ multiplicative_expression
   46 shift_expression: shift_expression RSHFT_ additive_expression .

    PLUS_   shift, and go to state 156
    MINUS_  shift, and go to state 157

    $default  reduce using rule 46 (shift_expression)


State 241

   45 shift_expression: shift_expression . LSHFT_ additive_expression
   46                 | shift_expression . RSHFT_ additive_expression
   48 relational_expression: relational_expression LESS_ shift_expression .

    LSHFT_  shift, and go to state 158
    RSHFT_  shift, and go to state 159

    $default  reduce using rule 48 (relational_expression)


State 242

   45 shift_expression: shift_expression . LSHFT_ additive_expression
   46                 | shift_expression . RSHFT_ additive_expression
   49 relational_expression: relational_expression GRTH_ shift_expression .

    LSHFT_  shift, and go to state 158
    RSHFT_  shift, and go to state 159

    $default  reduce using rule 49 (relational_expression)


State 243

   45 shift_expression: shift_expression . LSHFT_ additive_expression
   46                 | shift_expression . RSHFT_ additive_expression
   50 relational_expression: relational_expression LESSE_ shift_expression .

    LSHFT_  shift, and go to state 158
    RSHFT_  shift, and go to state 159

    $default  reduce using rule 50 (relational_expression)


State 244

   45 shift_expression: shift_expression . LSHFT_ additive_expression
   46                 | shift_expression . RSHFT_ additive_expression
   51 relational_expression: relational_expression GRTHE_ shift_expression .

    LSHFT_  shift, and go to state 158
    RSHFT_  shift, and go to state 159

    $default  reduce using rule 51 (relational_expression)


State 245

   48 relational_expression: relational_expression . LESS_ shift_expression
   49                      | relational_expression . GRTH_ shift_expression
   50                      | relational_expression . LESSE_ shift_expression
   51                      | relational_expression . GRTHE_ shift_expression
   53 equality_expression: equality_expression EQUALS_ relational_expression .

    LESS_   shift, and go to state 160
    GRTH_   shift, and go to state 161
    LESSE_  shift, and go to state 162
    GRTHE_  shift, and go to state 163

    $default  reduce using rule 53 (equality_expression)


State 246

   48 relational_expression: relational_expression . LESS_ shift_expression
   49                      | relational_expression . GRTH_ shift_expression
   50                      | relational_expression . LESSE_ shift_expression
   51                      | relational_expression . GRTHE_ shift_expression
   54 equality_expression: equality_expression NOTEQ_ relational_expression .

    LESS_   shift, and go to state 160
    GRTH_   shift, and go to state 161
    LESSE_  shift, and go to state 162
    GRTHE_  shift, and go to state 163

    $default  reduce using rule 54 (equality_expression)


State 247

   53 equality_expression: equality_expression . EQUALS_ relational_expression
   54                    | equality_expression . NOTEQ_ relational_expression
   56 AND_expression: AND_expression AND_ equality_expression .

    EQUALS_  shift, and go to state 164
    NOTEQ_   shift, and go to state 165

    $default  reduce using rule 56 (AND_expression)


State 248

   56 AND_expression: AND_expression . AND_ equality_expression
   58 exclusive_OR_expression: exclusive_OR_expression XOR_ AND_expression .

    AND_  shift, and go to state 166

    $default  reduce using rule 58 (exclusive_OR_expression)


State 249

   58 exclusive_OR_expression: exclusive_OR_expression . XOR_ AND_expression
   60 inclusive_OR_expression: inclusive_OR_expression OR_ exclusive_OR_expression .

    XOR_  shift, and go to state 167

    $default  reduce using rule 60 (inclusive_OR_expression)


State 250

   60 inclusive_OR_expression: inclusive_OR_expression . OR_ exclusive_OR_expression
   62 logical_AND_expression: logical_AND_expression ANDAND_ inclusive_OR_expression .

    OR_  shift, and go to state 168

    $default  reduce using rule 62 (logical_AND_expression)


State 251

   62 logical_AND_expression: logical_AND_expression . ANDAND_ inclusive_OR_expression
   64 logical_OR_expression: logical_OR_expression OROR_ logical_AND_expression .

    ANDAND_  shift, and go to state 169

    $default  reduce using rule 64 (logical_OR_expression)


State 252

   66 conditional_expression: logical_OR_expression QUES_ expression . COLON_ conditional_expression
   81 expression: expression . COMMA_ assignment_expression

    COLON_  shift, and go to state 289
    COMMA_  shift, and go to state 214


State 253

  200 jump_statement: BREAK_ SEMICOLON_ .

    $default  reduce using rule 200 (jump_statement)


State 254

  179 labeled_statement: CASE_ constant_expression . COLON_ statement

    COLON_  shift, and go to state 290


State 255

  199 jump_statement: CONTINUE_ SEMICOLON_ .

    $default  reduce using rule 199 (jump_statement)


State 256

  180 labeled_statement: DEFAULT_ COLON_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 291
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 257

  195 iteration_statement: DO_ statement . WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ SEMICOLON_

    WHILE_  shift, and go to state 292


State 258

  196 iteration_statement: FOR_ PAREN_OPEN_ . expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement
  197                    | FOR_ PAREN_OPEN_ . declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    AUTO_                  shift, and go to state 1
    CHAR_                  shift, and go to state 2
    CONST_                 shift, and go to state 3
    DOUBLE_                shift, and go to state 4
    ENUM_                  shift, and go to state 5
    EXTERN_                shift, and go to state 6
    FLOAT_                 shift, and go to state 7
    INLINE_                shift, and go to state 8
    INT_                   shift, and go to state 9
    LONG_                  shift, and go to state 10
    REGISTER_              shift, and go to state 11
    RESTRICT_              shift, and go to state 12
    SHORT_                 shift, and go to state 13
    SIGNED_                shift, and go to state 14
    SIZEOF_                shift, and go to state 69
    STATIC_                shift, and go to state 15
    UNSIGNED_              shift, and go to state 16
    VOID_                  shift, and go to state 17
    VOLATILE_              shift, and go to state 18
    BOOL_                  shift, and go to state 19
    COMPLEX_               shift, and go to state 20
    IMAGINARY_             shift, and go to state 21
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    declaration                go to state 293
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 294


State 259

  198 jump_statement: GOTO_ IDENTIFIER_ . SEMICOLON_

    SEMICOLON_  shift, and go to state 295


State 260

  191 selection_statement: IF_ PAREN_OPEN_ . expression PAREN_CLOSE_ statement
  192                    | IF_ PAREN_OPEN_ . expression PAREN_CLOSE_ statement ELSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 296


State 261

  201 jump_statement: RETURN_ expression_opt . SEMICOLON_

    SEMICOLON_  shift, and go to state 297


State 262

  193 selection_statement: SWITCH_ PAREN_OPEN_ . expression PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 298


State 263

  194 iteration_statement: WHILE_ PAREN_OPEN_ . expression PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 299


State 264

  178 labeled_statement: IDENTIFIER_ COLON_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 300
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 265

  181 compound_statement: CURBRK_OPEN_ block_item_list_opt CURBRK_CLOSE_ .

    $default  reduce using rule 181 (compound_statement)


State 266

  185 block_item_list: block_item_list block_item .

    $default  reduce using rule 185 (block_item_list)


State 267

  188 expression_statement: expression_opt SEMICOLON_ .

    $default  reduce using rule 188 (expression_statement)


State 268

  138 direct_declarator: direct_declarator SQRBRK_OPEN_ STATIC_ type_qualifier_list_opt . assignment_expression SQRBRK_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 301


State 269

   30 unary_operator: STAR_ .
  140 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt STAR_ . SQRBRK_CLOSE_

    SQRBRK_CLOSE_  shift, and go to state 302

    $default  reduce using rule 30 (unary_operator)


State 270

  147 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 147 (assignment_expression_opt)


State 271

  137 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt assignment_expression_opt . SQRBRK_CLOSE_

    SQRBRK_CLOSE_  shift, and go to state 303


State 272

  139 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list STATIC_ . assignment_expression SQRBRK_CLOSE_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 304


State 273

  155 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 155 (parameter_declaration)


State 274

  142 direct_declarator: direct_declarator PAREN_OPEN_ identifier_list_opt PAREN_CLOSE_ .

    $default  reduce using rule 142 (direct_declarator)


State 275

  141 direct_declarator: direct_declarator PAREN_OPEN_ parameter_type_list PAREN_CLOSE_ .

    $default  reduce using rule 141 (direct_declarator)


State 276

  152 parameter_type_list: parameter_list COMMA_ . TRPDOTS_
  154 parameter_list: parameter_list COMMA_ . parameter_declaration

    AUTO_       shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST_      shift, and go to state 3
    DOUBLE_     shift, and go to state 4
    ENUM_       shift, and go to state 5
    EXTERN_     shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE_     shift, and go to state 8
    INT_        shift, and go to state 9
    LONG_       shift, and go to state 10
    REGISTER_   shift, and go to state 11
    RESTRICT_   shift, and go to state 12
    SHORT_      shift, and go to state 13
    SIGNED_     shift, and go to state 14
    STATIC_     shift, and go to state 15
    UNSIGNED_   shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE_   shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX_    shift, and go to state 20
    IMAGINARY_  shift, and go to state 21
    TRPDOTS_    shift, and go to state 305

    declaration_specifiers   go to state 202
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 306


State 277

  158 identifier_list: identifier_list COMMA_ . IDENTIFIER_

    IDENTIFIER_  shift, and go to state 307


State 278

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_
   28 unary_expression: SIZEOF_ PAREN_OPEN_ type_name PAREN_CLOSE_ .

    CURBRK_OPEN_  shift, and go to state 280

    $default  reduce using rule 28 (unary_expression)


State 279

   81 expression: expression COMMA_ assignment_expression .

    $default  reduce using rule 81 (expression)


State 280

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ . initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ . initializer_list COMMA_ CURBRK_CLOSE_

    SQRBRK_OPEN_  shift, and go to state 123
    DOT_          shift, and go to state 124

    $default  reduce using rule 166 (designation_opt)

    initializer_list  go to state 308
    designation_opt   go to state 126
    designation       go to state 127
    designator_list   go to state 128
    designator        go to state 129


State 281

   36 cast_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ cast_expression .

    $default  reduce using rule 36 (cast_expression)


State 282

  170 designator: SQRBRK_OPEN_ constant_expression SQRBRK_CLOSE_ .

    $default  reduce using rule 170 (designator)


State 283

  162 initializer: CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_ .

    $default  reduce using rule 162 (initializer)


State 284

  164 initializer_list: initializer_list COMMA_ designation_opt . initializer

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 71
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 104
    initializer                go to state 309


State 285

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ . CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_

    CURBRK_OPEN_  shift, and go to state 280


State 286

   11 postfix_expression: postfix_expression SQRBRK_OPEN_ expression SQRBRK_CLOSE_ .

    $default  reduce using rule 11 (postfix_expression)


State 287

   12 postfix_expression: postfix_expression PAREN_OPEN_ argument_expression_list_opt PAREN_CLOSE_ .

    $default  reduce using rule 12 (postfix_expression)


State 288

   22 argument_expression_list: argument_expression_list COMMA_ . assignment_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 310


State 289

   66 conditional_expression: logical_OR_expression QUES_ expression COLON_ . conditional_expression

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 151
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 311


State 290

  179 labeled_statement: CASE_ constant_expression COLON_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 312
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 291

  180 labeled_statement: DEFAULT_ COLON_ statement .

    $default  reduce using rule 180 (labeled_statement)


State 292

  195 iteration_statement: DO_ statement WHILE_ . PAREN_OPEN_ expression PAREN_CLOSE_ SEMICOLON_

    PAREN_OPEN_  shift, and go to state 313


State 293

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration . expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 314


State 294

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt . SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SEMICOLON_  shift, and go to state 315


State 295

  198 jump_statement: GOTO_ IDENTIFIER_ SEMICOLON_ .

    $default  reduce using rule 198 (jump_statement)


State 296

   81 expression: expression . COMMA_ assignment_expression
  191 selection_statement: IF_ PAREN_OPEN_ expression . PAREN_CLOSE_ statement
  192                    | IF_ PAREN_OPEN_ expression . PAREN_CLOSE_ statement ELSE_ statement

    PAREN_CLOSE_  shift, and go to state 316
    COMMA_        shift, and go to state 214


State 297

  201 jump_statement: RETURN_ expression_opt SEMICOLON_ .

    $default  reduce using rule 201 (jump_statement)


State 298

   81 expression: expression . COMMA_ assignment_expression
  193 selection_statement: SWITCH_ PAREN_OPEN_ expression . PAREN_CLOSE_ statement

    PAREN_CLOSE_  shift, and go to state 317
    COMMA_        shift, and go to state 214


State 299

   81 expression: expression . COMMA_ assignment_expression
  194 iteration_statement: WHILE_ PAREN_OPEN_ expression . PAREN_CLOSE_ statement

    PAREN_CLOSE_  shift, and go to state 318
    COMMA_        shift, and go to state 214


State 300

  178 labeled_statement: IDENTIFIER_ COLON_ statement .

    $default  reduce using rule 178 (labeled_statement)


State 301

  138 direct_declarator: direct_declarator SQRBRK_OPEN_ STATIC_ type_qualifier_list_opt assignment_expression . SQRBRK_CLOSE_

    SQRBRK_CLOSE_  shift, and go to state 319


State 302

  140 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt STAR_ SQRBRK_CLOSE_ .

    $default  reduce using rule 140 (direct_declarator)


State 303

  137 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list_opt assignment_expression_opt SQRBRK_CLOSE_ .

    $default  reduce using rule 137 (direct_declarator)


State 304

  139 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list STATIC_ assignment_expression . SQRBRK_CLOSE_

    SQRBRK_CLOSE_  shift, and go to state 320


State 305

  152 parameter_type_list: parameter_list COMMA_ TRPDOTS_ .

    $default  reduce using rule 152 (parameter_type_list)


State 306

  154 parameter_list: parameter_list COMMA_ parameter_declaration .

    $default  reduce using rule 154 (parameter_list)


State 307

  158 identifier_list: identifier_list COMMA_ IDENTIFIER_ .

    $default  reduce using rule 158 (identifier_list)


State 308

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list . CURBRK_CLOSE_
   18                   | PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list . COMMA_ CURBRK_CLOSE_
  164 initializer_list: initializer_list . COMMA_ designation_opt initializer

    CURBRK_CLOSE_  shift, and go to state 321
    COMMA_         shift, and go to state 322


State 309

  164 initializer_list: initializer_list COMMA_ designation_opt initializer .

    $default  reduce using rule 164 (initializer_list)


State 310

   22 argument_expression_list: argument_expression_list COMMA_ assignment_expression .

    $default  reduce using rule 22 (argument_expression_list)


State 311

   66 conditional_expression: logical_OR_expression QUES_ expression COLON_ conditional_expression .

    $default  reduce using rule 66 (conditional_expression)


State 312

  179 labeled_statement: CASE_ constant_expression COLON_ statement .

    $default  reduce using rule 179 (labeled_statement)


State 313

  195 iteration_statement: DO_ statement WHILE_ PAREN_OPEN_ . expression PAREN_CLOSE_ SEMICOLON_

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 323


State 314

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt . SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SEMICOLON_  shift, and go to state 324


State 315

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ . expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 325


State 316

  191 selection_statement: IF_ PAREN_OPEN_ expression PAREN_CLOSE_ . statement
  192                    | IF_ PAREN_OPEN_ expression PAREN_CLOSE_ . statement ELSE_ statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 326
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 317

  193 selection_statement: SWITCH_ PAREN_OPEN_ expression PAREN_CLOSE_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 327
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 318

  194 iteration_statement: WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 328
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 319

  138 direct_declarator: direct_declarator SQRBRK_OPEN_ STATIC_ type_qualifier_list_opt assignment_expression SQRBRK_CLOSE_ .

    $default  reduce using rule 138 (direct_declarator)


State 320

  139 direct_declarator: direct_declarator SQRBRK_OPEN_ type_qualifier_list STATIC_ assignment_expression SQRBRK_CLOSE_ .

    $default  reduce using rule 139 (direct_declarator)


State 321

   17 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list CURBRK_CLOSE_ .

    $default  reduce using rule 17 (postfix_expression)


State 322

   18 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ . CURBRK_CLOSE_
  164 initializer_list: initializer_list COMMA_ . designation_opt initializer

    SQRBRK_OPEN_   shift, and go to state 123
    CURBRK_CLOSE_  shift, and go to state 329
    DOT_           shift, and go to state 124

    $default  reduce using rule 166 (designation_opt)

    designation_opt  go to state 284
    designation      go to state 127
    designator_list  go to state 128
    designator       go to state 129


State 323

   81 expression: expression . COMMA_ assignment_expression
  195 iteration_statement: DO_ statement WHILE_ PAREN_OPEN_ expression . PAREN_CLOSE_ SEMICOLON_

    PAREN_CLOSE_  shift, and go to state 330
    COMMA_        shift, and go to state 214


State 324

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ . expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 331


State 325

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt . SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SEMICOLON_  shift, and go to state 332


State 326

  191 selection_statement: IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement .
  192                    | IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement . ELSE_ statement

    ELSE_  shift, and go to state 333

    $default  reduce using rule 191 (selection_statement)

    Conflict between rule 191 and token ELSE_ resolved as shift (PAREN_CLOSE_ < ELSE_).


State 327

  193 selection_statement: SWITCH_ PAREN_OPEN_ expression PAREN_CLOSE_ statement .

    $default  reduce using rule 193 (selection_statement)


State 328

  194 iteration_statement: WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ statement .

    $default  reduce using rule 194 (iteration_statement)


State 329

   18 postfix_expression: PAREN_OPEN_ type_name PAREN_CLOSE_ CURBRK_OPEN_ initializer_list COMMA_ CURBRK_CLOSE_ .

    $default  reduce using rule 18 (postfix_expression)


State 330

  195 iteration_statement: DO_ statement WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ . SEMICOLON_

    SEMICOLON_  shift, and go to state 334


State 331

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt . SEMICOLON_ expression_opt PAREN_CLOSE_ statement

    SEMICOLON_  shift, and go to state 335


State 332

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ . expression_opt PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 336


State 333

  192 selection_statement: IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement ELSE_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 337
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 334

  195 iteration_statement: DO_ statement WHILE_ PAREN_OPEN_ expression PAREN_CLOSE_ SEMICOLON_ .

    $default  reduce using rule 195 (iteration_statement)


State 335

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ . expression_opt PAREN_CLOSE_ statement

    SIZEOF_                shift, and go to state 69
    PAREN_OPEN_            shift, and go to state 70
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 80
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    expression_opt             go to state 338


State 336

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt . PAREN_CLOSE_ statement

    PAREN_CLOSE_  shift, and go to state 339


State 337

  192 selection_statement: IF_ PAREN_OPEN_ expression PAREN_CLOSE_ statement ELSE_ statement .

    $default  reduce using rule 192 (selection_statement)


State 338

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt . PAREN_CLOSE_ statement

    PAREN_CLOSE_  shift, and go to state 340


State 339

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 341
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 340

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ . statement

    BREAK_                 shift, and go to state 172
    CASE_                  shift, and go to state 173
    CONTINUE_              shift, and go to state 174
    DEFAULT_               shift, and go to state 175
    DO_                    shift, and go to state 176
    FOR_                   shift, and go to state 177
    GOTO_                  shift, and go to state 178
    IF_                    shift, and go to state 179
    RETURN_                shift, and go to state 180
    SIZEOF_                shift, and go to state 69
    SWITCH_                shift, and go to state 181
    WHILE_                 shift, and go to state 182
    PAREN_OPEN_            shift, and go to state 70
    CURBRK_OPEN_           shift, and go to state 106
    INCR_                  shift, and go to state 72
    DECR_                  shift, and go to state 73
    AND_                   shift, and go to state 74
    STAR_                  shift, and go to state 75
    PLUS_                  shift, and go to state 76
    MINUS_                 shift, and go to state 77
    TILDA_                 shift, and go to state 78
    NOT_                   shift, and go to state 79
    IDENTIFIER_            shift, and go to state 183
    FLOAT_CONSTANT_        shift, and go to state 81
    CHARACTER_CONSTANT_    shift, and go to state 82
    STRING_LITERAL_        shift, and go to state 83
    ENUMERATION_CONSTANT_  shift, and go to state 84
    INTEGER_CONSTANT_      shift, and go to state 85
    FRACTIONAL_CONSTANT_   shift, and go to state 86

    $default  reduce using rule 190 (expression_opt)

    constant                   go to state 87
    primary_expression         go to state 88
    postfix_expression         go to state 89
    unary_expression           go to state 90
    unary_operator             go to state 91
    cast_expression            go to state 92
    multiplicative_expression  go to state 93
    additive_expression        go to state 94
    shift_expression           go to state 95
    relational_expression      go to state 96
    equality_expression        go to state 97
    AND_expression             go to state 98
    exclusive_OR_expression    go to state 99
    inclusive_OR_expression    go to state 100
    logical_AND_expression     go to state 101
    logical_OR_expression      go to state 102
    conditional_expression     go to state 103
    assignment_expression      go to state 117
    expression                 go to state 184
    statement                  go to state 342
    labeled_statement          go to state 187
    compound_statement         go to state 188
    expression_statement       go to state 192
    expression_opt             go to state 193
    selection_statement        go to state 194
    iteration_statement        go to state 195
    jump_statement             go to state 196


State 341

  196 iteration_statement: FOR_ PAREN_OPEN_ expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement .

    $default  reduce using rule 196 (iteration_statement)


State 342

  197 iteration_statement: FOR_ PAREN_OPEN_ declaration expression_opt SEMICOLON_ expression_opt SEMICOLON_ expression_opt PAREN_CLOSE_ statement .

    $default  reduce using rule 197 (iteration_statement)
